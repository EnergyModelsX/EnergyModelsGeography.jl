var documenterSearchIndex = {"docs":
[{"location":"how-to/contribute/#Contribute-to-EnergyModelsGeography","page":"Contribute to EnergyModelsGeography","title":"Contribute to EnergyModelsGeography","text":"","category":"section"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsGeography","title":"Contribute to EnergyModelsGeography","text":"Contributing to EnergyModelsGeography can be achieved in several different ways.","category":"page"},{"location":"how-to/contribute/#Creating-new-extensions","page":"Contribute to EnergyModelsGeography","title":"Creating new extensions","text":"","category":"section"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsGeography","title":"Contribute to EnergyModelsGeography","text":"The main focus of EnergyModelsGeography is to provide EnergyModelsBase with geographical representation using the concepts of Areas, Transmission corridors, or TransmissionModes. Hence, a first approach to contributing to EnergyModelsGeography is to create a new package with, e.g., the introduction of new Area, Transmission, or TransmissionMode descriptions. These descriptions can, e.g., include constraints for an Area or provide the model with new mathematical formulations for energy transmissions.","category":"page"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsGeography","title":"Contribute to EnergyModelsGeography","text":"note: Note\nWe are currently working on guidelines for the best approach for EnergyModelsGeography, similar to the section Extensions to the model in EnergyModelsBase. This section will provide you eventually with additional information regarding to how you can develop new Area, Transmission, or TransmissionMode descriptions.","category":"page"},{"location":"how-to/contribute/#File-a-bug-report","page":"Contribute to EnergyModelsGeography","title":"File a bug report","text":"","category":"section"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsGeography","title":"Contribute to EnergyModelsGeography","text":"Another approach to contributing to EnergyModelsGeography is through filing a bug report as an issue when unexpected behaviour is occuring.","category":"page"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsGeography","title":"Contribute to EnergyModelsGeography","text":"When filing a bug report, please follow the following guidelines:","category":"page"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsGeography","title":"Contribute to EnergyModelsGeography","text":"Be certain that the bug is a bug and originating in EnergyModelsGeography:\nIf the problem is within the results of the optimization problem, please check first that the nodes are correctly linked with each other. Frequently, missing links (or wrongly defined links) restrict the transport of energy/mass. If you are certain that all links are set correctly, it is most likely a bug in EnergyModelsGeography and should be reported.\nIf you observe no transfer of mass between geographical regions, please check first that you use a GeoAvailability node as the description is different from a GenAvailability node. In addition, please check that the Transmission corridors and TransmissionModes are set correctly as well as there is a demand or suppy in both areas of the transported Resource.\nIf the problem occurs in model construction, it is most likely a bug in either EnergyModelsBase or EnergyModelsGeography and should be reported in the respective package. The error message of Julia should provide you with the failing function and whether the failing function is located in EnergyModelsBase or EnergyModelsGeography. It can occur, that the last shown failing function is within JuMP or MathOptInterface. In this case, it is best to trace the error to the last called EnergyModelsBase or EnergyModelsGeography function.\nIf the problem is only appearing for specific solvers, it is most likely not a bug in EnergyModelsGeography, but instead a problem of the solver wrapper for MathOptInterface. In this case, please contact the developers of the corresponding solver wrapper.\nLabel the issue as bug, and\nProvide a minimum working example of a case in which the bug occurs.","category":"page"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsGeography","title":"Contribute to EnergyModelsGeography","text":"note: Note\nWe are aware that certain design choices within EnergyModelsGeography can lead to method ambiguities. Our aim is to extend the documentation to improve the description on how to best extend the base functionality as well as which caveats can occur.In order to improve the code, we welcome any reports of potential method ambiguities to help us improving the structure of the framework.","category":"page"},{"location":"how-to/contribute/#Feature-requests","page":"Contribute to EnergyModelsGeography","title":"Feature requests","text":"","category":"section"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsGeography","title":"Contribute to EnergyModelsGeography","text":"Although EnergyModelsGeography was designed with the aim of flexibility, it sometimes still requires additional features to account for potential extensions. Feature requests for EnergyModelsGeography should follow the guidelines developed for EnergyModelsBase.","category":"page"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsGeography","title":"Contribute to EnergyModelsGeography","text":"note: Note\nEnergyModelsGeography should not include everything.The aim of the framework is to be lightweight and extensible by the user. Hence, feature requests should only include basic requirements for the core structure, and not, e.g., the description of new Areas description. These should be developed outside of EnergyModelsGeography.","category":"page"},{"location":"manual/optimization-variables/#optimization_variables","page":"Optimization variables","title":"Optimization variables","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"EnergyModelsGeography adds additional variables to EnergyModelsBase. These variables are required for being able to extend the model with geographic information. The additional variables can be differentiated between Area variables and TransmissionMode variables.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"note: Note\nAs it is the case in EnergyModelsBase, we define almost exclusively rate variables in EnergyModelsGeography. Variables that are energy/mass based have that property highlighted in the documentation below. This is only the case for the storage level in a PipeLinepackSimple.","category":"page"},{"location":"manual/optimization-variables/#[Area](@ref)","page":"Optimization variables","title":"Area","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"Areas create only a single additional variable:","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"textttarea_exchangea t p_ex: Exchange of energy/mass from area a in operational period t for exchange resource p_textttex.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The area exchange is defined for all areas for resources that area can exchange with other areas. This also includes also potential Transmission corridors in which the model can invest in. The exchange resources are automatically deduced from the coupled TransmissionModes. The area exchange is negative when exporting energy/mass and positive when importing. This implies that for textttarea_exchangea t p_textttex  0, the area imports product p, and for textttarea_exchangea t p_textttex  0, the area exports product p_textttex.","category":"page"},{"location":"manual/optimization-variables/#[TransmissionMode](@ref)","page":"Optimization variables","title":"TransmissionMode","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"warning: 'Inheritance' of optimization variables\nNote that for all subtypes of TransmissionMode the variables created for the parent TransmissionMode-type will be created, in addition to the variables created for that type.This means that the type PipeLinepackSimple will not only have access to the optimization variable textttlinepack_stor_levelm t, but also all the optimization variables created for TransmissionMode.","category":"page"},{"location":"manual/optimization-variables/#General-variables-for-all-TransmissionMode","page":"Optimization variables","title":"General variables for all TransmissionMode","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"All variables described in this section are included for all subtypes of TransmissionMode. In general, we can differentiate between capacity variables, flow variables, cost variables, and helper variables.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"texttttrans_capm t: Transmission capacity of transmission mode m in operational period t.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"is the single capacity variable that is considered in the case of TransmissionModes.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"texttttrans_inm t: Flow into the transmission mode m, given by the from field in the Transmission corridor in operational period t,\ntexttttrans_outm t: Flow out of transmission mode m, given by the to field in the Transmission corridor in operational period t, and\ntexttttrans_lossm t: Loss of transmission mode m in operational period t,","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"are the three flow variables. The loss is in practice not a flow variable, but can be considered as equivalent.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"TransmissionModes can also have operational costs. We differentiate between variables and fixed operational costs (OPEX) as it is the case in EnergyModelsBase:","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"texttttrans_opex_varm t_textttinv: Variable OPEX of transmission mode m in strategic period t_textttinv and\ntexttttrans_opex_fixedm t_textttinv: Fixed OPEX of transmission mode m in strategic period t_textttinv.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The definitions of both fixed and variable operational cost are similar to the definitions for Nodes in EnergyModelsBase.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"Bidirectional flow requires the introduction of helper variables for proper calculation of both the loss and the variable OPEX. The following variables are hence created in addition, if bidirectional flow is allowed.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"texttttrans_posm t: Flow of transmission mode m in operational period t in the positive direction,\ntexttttrans_negm t: Flow of transmission mode m in operational period t in the negative direction.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"In addition, both texttttrans_inm t and texttttrans_outm t can in this situation be both positive or negative.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"note: Note\nThe direction of a Transmission corridor has an impact on whether the variables are positive or negative for export from a given Area as well as whether texttttrans_inm t or texttttrans_outm t corresponds to the inlet/outlet flow rate of a TransmissionMode.If the energy/mass is transported in the direction of the Transmission corridor, then both variables are positive and texttttrans_inm t corresponds to the inlet to the TransmissionMode.If the energy/mass is transported  opposite to the direction of the Transmission corridor, then both variables are negative and texttttrans_inm t corresponds to the outlet to the TransmissionMode.","category":"page"},{"location":"manual/optimization-variables/#[PipeLinepackSimple](@ref)-:-Pipeline-:-TransmissionMode","page":"Optimization variables","title":"PipeLinepackSimple <: Pipeline <: TransmissionMode","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"PipeLinepackSimple adds one additional variable:","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"textttlinepack_stor_levelm t: the storage level in the pipeline m in operational period t.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"Contrary to a Storage node, we do not add a storage capacity or rate for the simple implementation of linepacking. In fact, storing gases through line packing is a fundamental property of the pipeline, influenced by the pipeline diameter and the properties of the stored gas. Hence, it cannot be considered that the capacity and rate of storage are independent of each other.","category":"page"},{"location":"manual/simple-example/#Examples","page":"Example","title":"Examples","text":"","category":"section"},{"location":"manual/simple-example/","page":"Example","title":"Example","text":"For the content of the example, see the examples directory in the project repository.","category":"page"},{"location":"manual/simple-example/#The-package-is-installed-with-]-add","page":"Example","title":"The package is installed with ] add","text":"","category":"section"},{"location":"manual/simple-example/","page":"Example","title":"Example","text":"From the Julia REPL, run","category":"page"},{"location":"manual/simple-example/","page":"Example","title":"Example","text":"# Starts the Julia REPL\njulia> using EnergyModelsGeography\n# Get the path of the examples directory\njulia> exdir = joinpath(pkgdir(EnergyModelsGeography), \"examples\")\n# Include the code into the Julia REPL to run the examples\njulia> include(joinpath(exdir, \"network.jl\"))","category":"page"},{"location":"manual/simple-example/#The-code-was-downloaded-with-git-clone","page":"Example","title":"The code was downloaded with git clone","text":"","category":"section"},{"location":"manual/simple-example/","page":"Example","title":"Example","text":"The examples can be run from the terminal with","category":"page"},{"location":"manual/simple-example/","page":"Example","title":"Example","text":"~/../energymodelsgeography.jl/examples $ julia network.jl","category":"page"},{"location":"manual/quick-start/#quick_start","page":"Quick Start","title":"Quick Start","text":"","category":"section"},{"location":"manual/quick-start/","page":"Quick Start","title":"Quick Start","text":"Install the most recent version of Julia\nInstall the package EnergyModelsBase and the time package TimeStruct, by running:\n] add TimeStruct\n] add EnergyModelsBase\nThese packages are required as we do not only use them internally, but also for building a model.\nInstall the package EnergyModelsGeography\n] add EnergyModelsGeography","category":"page"},{"location":"manual/philosophy/#Philosophy","page":"Philosophy","title":"Philosophy","text":"","category":"section"},{"location":"manual/philosophy/#General-design-philosophy","page":"Philosophy","title":"General design philosophy","text":"","category":"section"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"This package extends EnergyModelsBase with geographical functionalities. The geographical representation is achieved through individual Areas coupled with Transmission corridors. Each area can represent an individual energy system with different technology Nodes and Links between the Nodes. Transmission corridors define pathways from one Area to another Area. Each corridor can have multiple TransmissionModes used to transport resources. The TransmissionModes can be static infrastructure such as PipelineMode or dynamic modes such as ships. The latter is in the current stage not yet implemented.","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"The extension of EnergyModelsBase is achieved through calling on the function create_model within EnergyModelsGeography. This corresponds to the 2ⁿᵈ bullet point in the list of Extensions to the model.","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"Each Area is assocoiated with corresponding latitude and longitude coordinates. These coordinates can be utilized to calculate the distance between two Areas. It is however not a necessity to base the distance on the coordinates. The values are in practice not used directly, but can be used by the user when calculating, e.g, OPEX values or transmission losses. It is in addition also not necesseary to use the same distance for individual TransmissionModes within a Transmission corridor. This can be beneficial for the case of power lines vs. pipelines which may require a different routing due to the geographical features of a region.","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"EnergyModelsGeography does not directly allow for emissions associated with transport of energy or mass. We included in an internal version one approach to extend the emission constraints, but are not yet satisfied with the exact implementation. This implies that including emissions in mass/energy transport is on the agenda for future improvements.","category":"page"},{"location":"manual/philosophy/#Extensions-to-the-model","page":"Philosophy","title":"Extensions to the model","text":"","category":"section"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"EnergyModelsGeography is also designed to be extended by the user. Extensions of EnergyModelsGeography are possible through","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"specialized Areas (like the LimitedExchangeArea) and\nnew TransmissionModes.","category":"page"},{"location":"manual/philosophy/#Specialized-Areas","page":"Philosophy","title":"Specialized Areas","text":"","category":"section"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"Specialized Areas are areas with additional constraints. In general, it is possible to import and export as much as possible through the connected Transmission corridors. Introducing specialized Areas allow the introduciton of additional constraints within an Area. These constraints can include, among others, limits on the CO₂ emissions within an Area, export limits both on, e.g. operational or strategic periods as well as many other modifications.","category":"page"},{"location":"manual/philosophy/#New-[TransmissionMode](@ref)s","page":"Philosophy","title":"New TransmissionModes","text":"","category":"section"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"New TransmissionModes may be relevant for describing a dynamic transport mechanism or for adding a distinctive description for an energy carrier. TransmissionModes can be developed similar to new Nodes as described in EnergyModelsBase.","category":"page"},{"location":"manual/constraint-functions/#constraint_functions","page":"Constraint functions","title":"Constraint functions","text":"","category":"section"},{"location":"manual/constraint-functions/","page":"Constraint functions","title":"Constraint functions","text":"The package provides standard constraint functions that can be use for new developed TransmissionModes. The general approach is similar to EnergyModelsBase. Bidirectional transport requires at the time being the introduciton of an if-loop. In later implementation, it is planned to also use dispatch for this analysis as well.","category":"page"},{"location":"manual/constraint-functions/#Capacity-constraints","page":"Constraint functions","title":"Capacity constraints","text":"","category":"section"},{"location":"manual/constraint-functions/","page":"Constraint functions","title":"Constraint functions","text":"constraints_capacity(m, tm::TransmissionMode, 𝒯::TimeStructure, modeltype::EnergyModel)","category":"page"},{"location":"manual/constraint-functions/","page":"Constraint functions","title":"Constraint functions","text":"correponds to the constraints on the capacity usage of a transmission mode tm. It is implemented for both the TransmissionMode and PipeMode abstract types as well as PipeLinepackSimple concrete type. The key difference between the former two is related that PipeMode does not allows for bidirectional transport. PipeLinepackSimple includes in addition the maximum storage capacity for a pipeline when considering linepacking. The implementation is still preliminary and based on a simplified potential for energy storage in a pipeline.","category":"page"},{"location":"manual/constraint-functions/","page":"Constraint functions","title":"Constraint functions","text":"Within this function, the function","category":"page"},{"location":"manual/constraint-functions/","page":"Constraint functions","title":"Constraint functions","text":"constraints_capacity_installed(m, tm::TransmissionMode, 𝒯::TimeStructure, modeltype::EnergyModel)","category":"page"},{"location":"manual/constraint-functions/","page":"Constraint functions","title":"Constraint functions","text":"is called to limit the variable texttttrans_cap_inst of transmission mode tm. This functions is also used to subsequently dispatch on model type for the introduction of investments.","category":"page"},{"location":"manual/constraint-functions/","page":"Constraint functions","title":"Constraint functions","text":"warning: Warning\nAs the function constraints_capacity_installed is used for including investments for tranmission modes, it is important that it is also called when creating a new mode. It is not possible to only add a function forconstraints_capacity_installed(m, tm::TransmissionMode, 𝒯::TimeStructure, modeltype::EnergyModel)without adding a function forconstraints_capacity_installed(m, tm::TransmissionMode, 𝒯::TimeStructure, modeltype::EMI.AbstractInvestmentModel)as this can lead to a method ambiguity error.","category":"page"},{"location":"manual/constraint-functions/#Transmission-loss-functions","page":"Constraint functions","title":"Transmission loss functions","text":"","category":"section"},{"location":"manual/constraint-functions/","page":"Constraint functions","title":"Constraint functions","text":"constraints_trans_loss(m, tm::TransmissionMode, 𝒯ᴵⁿᵛ, modeltype::EnergyModel)","category":"page"},{"location":"manual/constraint-functions/","page":"Constraint functions","title":"Constraint functions","text":"correponds to the constraints on the energy balance of a transmission mode tm. It is implemented for both the TransmissionMode and PipeMode abstract types. The key difference between the two is related that PipeMode does not allows for bidirectional transport. The loss is calculated for the provided TransmissionModes as relative loss of the transported energy.","category":"page"},{"location":"manual/constraint-functions/#Balance-functions","page":"Constraint functions","title":"Balance functions","text":"","category":"section"},{"location":"manual/constraint-functions/","page":"Constraint functions","title":"Constraint functions","text":"constraints_trans_balance(m, tm::TransmissionMode, 𝒯ᴵⁿᵛ, modeltype::EnergyModel)","category":"page"},{"location":"manual/constraint-functions/","page":"Constraint functions","title":"Constraint functions","text":"correponds to the constraints on the energy balance of a transmission mode tm. It is implemented for both the TransmissionMode and PipeLinepackSimple abstract types. The standard approach only relies on the conservation of mass/energy, while storage is not included. PipeLinePackSimple also includes the overall mass balance for the energy storage within the pipeline.","category":"page"},{"location":"manual/constraint-functions/","page":"Constraint functions","title":"Constraint functions","text":"note: Note\nPipeLinePackSimple does not support representative periods correctly. In practice, seasonal energy storage through linepacking is unrealistic due to the small volume. The implementation is working with the assumption that the initial level in a representative period is equal to the final level in the last representative period of a strategic period. This implies that it does not account correctly for the remaining level at the end of a representative period.","category":"page"},{"location":"manual/constraint-functions/#Operational-expenditure-constraints","page":"Constraint functions","title":"Operational expenditure constraints","text":"","category":"section"},{"location":"manual/constraint-functions/","page":"Constraint functions","title":"Constraint functions","text":"constraints_opex_fixed(m, tm::TransmissionMode, 𝒯ᴵⁿᵛ, modeltype::EnergyModel)","category":"page"},{"location":"manual/constraint-functions/","page":"Constraint functions","title":"Constraint functions","text":"corresponds to the constraints calculating the fixed operational costs of a transmission mode tm. There is currently only a single implemented version. It can however be extended, if desirable.","category":"page"},{"location":"manual/constraint-functions/","page":"Constraint functions","title":"Constraint functions","text":"constraints_opex_var(m, tm::TransmissionMode, 𝒯ᴵⁿᵛ, modeltype::EnergyModel)","category":"page"},{"location":"manual/constraint-functions/","page":"Constraint functions","title":"Constraint functions","text":"corresponds to the constraints calculating the variable operational costs of a transmission mode tm. There is currently only a single implemented version. It can however be extended, if desirable.","category":"page"},{"location":"manual/transmission-mode/#TransmissionModes","page":"TransmissionMode structure","title":"TransmissionModes","text":"","category":"section"},{"location":"manual/transmission-mode/","page":"TransmissionMode structure","title":"TransmissionMode structure","text":"The overall structure of the individual TransmissionModes can be printed to the REPL using the following code:","category":"page"},{"location":"manual/transmission-mode/","page":"TransmissionMode structure","title":"TransmissionMode structure","text":"julia> using EnergyModelsGeography\njulia> const EMG = EnergyModelsGeography\njulia> using AbstractTrees\njulia> AbstractTrees.children(x::Type) = subtypes(x)\n\njulia> print_tree(EMG.TransmissionMode)","category":"page"},{"location":"manual/transmission-mode/","page":"TransmissionMode structure","title":"TransmissionMode structure","text":"TransmissionMode\n├─ PipeMode\n│  ├─ PipeLinepackSimple\n│  └─ PipeSimple\n├─ RefDynamic\n└─ RefStatic","category":"page"},{"location":"manual/transmission-mode/","page":"TransmissionMode structure","title":"TransmissionMode structure","text":"The leaf TransmissionModes of the above type hierarchy tree are composite types, while the inner vertices are abstract types. The individual TransmissionMode and their fields are explained in the public library.","category":"page"},{"location":"library/internals/reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"library/internals/reference/#Index","page":"Reference","title":"Index","text":"","category":"section"},{"location":"library/internals/reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"library/internals/reference/#lib_interal_ref_types","page":"Reference","title":"Types","text":"","category":"section"},{"location":"library/internals/reference/","page":"Reference","title":"Reference","text":"Modules = [EnergyModelsGeography]\nPublic = false\nOrder = [:type]","category":"page"},{"location":"library/internals/reference/#Methods","page":"Reference","title":"Methods","text":"","category":"section"},{"location":"library/internals/reference/","page":"Reference","title":"Reference","text":"Modules = [EnergyModelsGeography]\nPublic = false\nOrder = [:function]","category":"page"},{"location":"library/internals/reference/#EnergyModelsBase.capacity-Tuple{TransmissionMode, Any}","page":"Reference","title":"EnergyModelsBase.capacity","text":"capacity(tm::TransmissionMode, t)\n\nReturns the capacity of transmission mode tm at time period t.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsBase.capacity-Tuple{TransmissionMode}","page":"Reference","title":"EnergyModelsBase.capacity","text":"capacity(tm::TransmissionMode)\n\nReturns the capacity of transmission mode tm as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsBase.create_node-Tuple{Any, GeoAvailability, Any, Any, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsBase.create_node","text":"EMB.create_node(m, n::GeoAvailability, 𝒯, 𝒫, modeltype::EnergyModel)\n\nRepaces constraints for availability nodes of type GeoAvailability. The resource balances are set by the area constraints instead.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsBase.inputs-Tuple{TransmissionMode}","page":"Reference","title":"EnergyModelsBase.inputs","text":"input(tm::TransmissionMode)\n\nReturns the input resources of transmission mode tm.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsBase.opex_fixed-Tuple{TransmissionMode, Any}","page":"Reference","title":"EnergyModelsBase.opex_fixed","text":"opex_fixed(tm::TransmissionMode, t_inv)\n\nReturns the variable OPEX of transmission mode tm at strategic period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsBase.opex_fixed-Tuple{TransmissionMode}","page":"Reference","title":"EnergyModelsBase.opex_fixed","text":"opex_fixed(tm::TransmissionMode)\n\nReturns the variable OPEX of transmission mode tm as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsBase.opex_var-Tuple{TransmissionMode, Any}","page":"Reference","title":"EnergyModelsBase.opex_var","text":"opex_var(tm::TransmissionMode, t)\n\nReturns the variable OPEX of transmission mode tm at time period t.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsBase.opex_var-Tuple{TransmissionMode}","page":"Reference","title":"EnergyModelsBase.opex_var","text":"opex_var(tm::TransmissionMode)\n\nReturns the variable OPEX of transmission mode tm as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsBase.outputs-Tuple{TransmissionMode}","page":"Reference","title":"EnergyModelsBase.outputs","text":"output(tm::TransmissionMode)\n\nReturns the output resources of transmission mode tm.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.check_area-Tuple{Area, Any, Any, EnergyModelsBase.EnergyModel, Bool}","page":"Reference","title":"EnergyModelsGeography.check_area","text":"check_area(a::Area, 𝒯, 𝒫, modeltype::EnergyModel, check_timeprofiles::Bool)\n\nCheck that the fields of an Area corresponds to required structure.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.check_case_data-Tuple{Any}","page":"Reference","title":"EnergyModelsGeography.check_case_data","text":"check_case_data(case)\n\nChecks the case dictionary is in the correct format. The function is only checking the new, additional data as we do not yet consider dispatch on the case data.\n\nChecks\n\nThe dictionary requires the keys :areas and :transmission.\nThe individual keys are of the correct type, that is\n:areas::Area and\n:transmission::Vector{<:Transmission}.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.check_data-Tuple{Any, Any, Bool}","page":"Reference","title":"EnergyModelsGeography.check_data","text":"check_data(case, modeltype, check_timeprofiles::Bool)\n\nCheck if the case data is consistent. Use the @assert_or_log macro when testing. Currently, not checking data except that the case dictionary follows the required structure.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.check_mode-Tuple{TransmissionMode, Any, Any, EnergyModelsBase.EnergyModel, Bool}","page":"Reference","title":"EnergyModelsGeography.check_mode","text":"check_mode(m::TransmissionMode, 𝒯, 𝒫, modeltype::EnergyModel, check_timeprofiles::Bool)\n\nCheck that the fields of a TransmissionMode corresponds to required structure.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.check_time_structure-Tuple{TransmissionMode, Any}","page":"Reference","title":"EnergyModelsGeography.check_time_structure","text":"check_time_structure(m::TransmissionMode, 𝒯)\n\nCheck that all fields of a TransmissionMode that are of type TimeProfile correspond to the time structure 𝒯.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.check_transmission-Tuple{Transmission, Any, Any, EnergyModelsBase.EnergyModel, Bool}","page":"Reference","title":"EnergyModelsGeography.check_transmission","text":"check_transmission(l::Transmission, 𝒯, 𝒫, modeltype::EnergyModel, check_timeprofiles::Bool)\n\nCheck that the fields of a Transmission corridor corresponds to required structure.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.compute_trans_in-Tuple{Any, Any, Any, PipeMode}","page":"Reference","title":"EnergyModelsGeography.compute_trans_in","text":"compute_trans_in(m, t, p, tm::PipeMode)\n\nReturn the amount of resources going into transmission corridor l by a PipeMode.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.compute_trans_in-Tuple{Any, Any, Any, TransmissionMode}","page":"Reference","title":"EnergyModelsGeography.compute_trans_in","text":"compute_trans_in(m, t, p, tm::TransmissionMode)\n\nReturn the amount of resources going into transmission corridor l by a generic TransmissionMode\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.compute_trans_out-Tuple{Any, Any, Any, PipeMode}","page":"Reference","title":"EnergyModelsGeography.compute_trans_out","text":"compute_trans_out(m, t, p, tm::PipeMode)\n\nReturn the amount of resources going out of transmission corridor l by a PipeMode.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.compute_trans_out-Tuple{Any, Any, Any, TransmissionMode}","page":"Reference","title":"EnergyModelsGeography.compute_trans_out","text":"compute_trans_out(m, t, p, tm::TransmissionMode)\n\nReturn the amount of resources going out of transmission corridor l by a generic TransmissionMode\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.constraints_area-Tuple{Any, Any, Any, Any, Any, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.constraints_area","text":"constraints_area(m, 𝒜, 𝒯, ℒᵗʳᵃⁿˢ, 𝒫, modeltype::EnergyModel)\n\nCreate constraints for the energy balances within an area for each resource using the GeoAvailability node. Keep track of the exchange with other areas in a seperate variable :area_exchange.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.constraints_capacity-Tuple{Any, PipeLinepackSimple, TimeStruct.TimeStructure, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.constraints_capacity","text":"constraints_capacity(m, tm::PipeLinepackSimple, 𝒯::TimeStructure, modeltype::EnergyModel)\n\nFunction for creating the constraint on the maximum capacity of a PipeLinepackSimple.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.constraints_capacity-Tuple{Any, PipeMode, TimeStruct.TimeStructure, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.constraints_capacity","text":"constraints_capacity(m, tm::PipeMode, 𝒯::TimeStructure, modeltype::EnergyModel)\n\nFunction for creating the constraint on the maximum capacity of a generic PipeMode.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.constraints_capacity-Tuple{Any, TransmissionMode, TimeStruct.TimeStructure, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.constraints_capacity","text":"constraints_capacity(m, tm::TransmissionMode, 𝒯::TimeStructure, modeltype::EnergyModel)\n\nFunction for creating the constraint on the maximum capacity of a generic TransmissionMode. This function serves as fallback option if no other function is specified for a TransmissionMode.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.constraints_capacity_installed-Tuple{Any, TransmissionMode, TimeStruct.TimeStructure, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.constraints_capacity_installed","text":"constraints_capacity_installed(m, tm::TransmissionMode, 𝒯::TimeStructure, modeltype::EnergyModel)\n\nFunction for creating the constraint on the installed capacity of a TransmissionMode.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.constraints_opex_fixed-Tuple{Any, TransmissionMode, Any, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.constraints_opex_fixed","text":"constraints_opex_fixed(m, tm::TransmissionMode, 𝒯ᴵⁿᵛ, modeltype::EnergyModel)\n\nFunction for creating the constraint on the fixed OPEX of a generic TransmissionMode. This function serves as fallback option if no other function is specified for a TransmissionMode.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.constraints_opex_var-Tuple{Any, TransmissionMode, Any, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.constraints_opex_var","text":"constraints_opex_var(m, tm::TransmissionMode, 𝒯ᴵⁿᵛ, modeltype::EnergyModel)\n\nFunction for creating the constraint on the variable OPEX of a generic TransmissionMode. This function serves as fallback option if no other function is specified for a TransmissionMode.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.constraints_trans_balance-Tuple{Any, PipeLinepackSimple, TimeStruct.TimeStructure, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.constraints_trans_balance","text":"constraints_trans_balance(m, tm::PipeLinepackSimple, 𝒯::TimeStructure, modeltype::EnergyModel)\n\nFunction for creating the transmission balance for aPipeLinepackSimple.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.constraints_trans_balance-Tuple{Any, TransmissionMode, TimeStruct.TimeStructure, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.constraints_trans_balance","text":"constraints_trans_balance(m, tm::TransmissionMode, 𝒯::TimeStructure, modeltype::EnergyModel)\n\nFunction for creating the transmission balance for a generic TransmissionMode. This function serves as fallback option if no other function is specified for a TransmissionMode.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.constraints_trans_loss-Tuple{Any, PipeMode, TimeStruct.TimeStructure, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.constraints_trans_loss","text":"constraints_trans_loss(m, tm::PipeMode, 𝒯::TimeStructure, modeltype::EnergyModel)\n\nFunction for creating the constraint on the transmission loss of a generic PipeMode.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.constraints_trans_loss-Tuple{Any, TransmissionMode, TimeStruct.TimeStructure, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.constraints_trans_loss","text":"constraints_trans_loss(m, tm::TransmissionMode, 𝒯::TimeStructure, modeltype::EnergyModel)\n\nFunction for creating the constraint on the transmission loss of a generic TransmissionMode. This function serves as fallback option if no other function is specified for a TransmissionMode.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.constraints_transmission-Tuple{Any, Any, Any, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.constraints_transmission","text":"constraints_transmission(m, 𝒯, ℳ, modeltype::EnergyModel)\n\nCreate transmission constraints on all transmission corridors.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.create_area-Tuple{Any, Area, Any, Any, Any}","page":"Reference","title":"EnergyModelsGeography.create_area","text":"create_area(m, a::Area, 𝒯, ℒᵗʳᵃⁿˢ, modeltype)\n\nDefault fallback method when no function is defined for a node type.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.create_area-Tuple{Any, LimitedExchangeArea, Any, Any, Any}","page":"Reference","title":"EnergyModelsGeography.create_area","text":"create_area(m, a::LimitedExchangeArea, 𝒯, ℒᵗʳᵃⁿˢ, modeltype)\n\nConstraint that limit exchange with other areas based on the specified exchange_limit.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.create_model-Tuple{Any, EnergyModelsBase.EnergyModel, JuMP.Model}","page":"Reference","title":"EnergyModelsGeography.create_model","text":"create_model(case, modeltype::EnergyModel; check_timeprofiles::Bool=true)\n\nCreate the model and call all required functions.\n\nInput\n\ncase - The case dictionary requiring the keys :T, :nodes, :links, products as it is the case for standard EnergyModelsBase models. In addition, the keys :areas and :transmission are required for extending the existing model. If the input is not provided in the correct form, the checks will identify the problem. In the case of a\nmodeltype::EnergyModel - Used modeltype, that is a subtype of the type EnergyModel.\nm - the empty JuMP.Model instance. If it is not provided, then it is assumed that the input is a standard JuMP.Model.\n\nConditional input\n\ncheck_timeprofiles::Bool=true - A boolean indicator whether the time profiles of the individual nodes should be checked or not. It is advised to not deactivate the check, except if you are testing new components. It may lead to unexpected behaviour and potential inconsistencies in the input data, if the time profiles are not checked.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.create_transmission_mode-Tuple{Any, TransmissionMode, Any, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.create_transmission_mode","text":"create_transmission_mode(m, tm::TransmissionMode, 𝒯, modeltype::EnergyModel)\n\nSet all constraints for transmission mode. Serves as a fallback option for unspecified subtypes of TransmissionMode.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.export_resources-Tuple{Any, Area}","page":"Reference","title":"EnergyModelsGeography.export_resources","text":"export_resources(ℒ, a::Area)\n\nReturn the resources exported from area a on the transmission corridors in ℒ.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.extract_resources-Tuple{Any, Any}","page":"Reference","title":"EnergyModelsGeography.extract_resources","text":"extract_resources(ℒ, resource_method)\n\nReturn the resources transported/consumed by the transmission corridors in ℒ.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.import_resources-Tuple{Any, Area}","page":"Reference","title":"EnergyModelsGeography.import_resources","text":"import_resources(ℒ, a::Area)\n\nReturn the resources imported into area a on the transmission corridors in ℒ.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.is_bidirectional-Tuple{TransmissionMode}","page":"Reference","title":"EnergyModelsGeography.is_bidirectional","text":"is_bidirectional(tm::TransmissionMode)\n\nChecks whether TransmissionMode tm is bidirectional.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.trans_sub-Tuple{Any, Area}","page":"Reference","title":"EnergyModelsGeography.trans_sub","text":"trans_sub(ℒ, a::Area)\n\nReturn connected transmission corridors for a given area.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.update_objective-Tuple{Any, Any, Any, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.update_objective","text":"update_objective(m, 𝒩, 𝒯, 𝒫, ℒᵗʳᵃⁿˢ, modeltype::EnergyModel)\n\nUpdate the objective function with costs related to geography (areas and energy transmission).\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.variables_area-Tuple{Any, Any, Any, Any, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.variables_area","text":"variables_area(m, 𝒜, 𝒯, ℒᵗʳᵃⁿˢ, modeltype::EnergyModel)\n\nCreate variables to track how much energy is exchanged from an area for all time periods t ∈ 𝒯.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.variables_trans_capacity-Tuple{Any, Any, Any, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.variables_trans_capacity","text":"variables_trans_capacity(m, 𝒯, ℳ, modeltype::EnergyModel)\n\nDeclaration of variables for tracking how much of installed transmision capacity is used f or all time periods t ∈ 𝒯 of the tranmission modes.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.variables_trans_capex-Tuple{Any, Any, Any, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.variables_trans_capex","text":"variables_trans_capex(m, 𝒯, ℳ, modeltype::EnergyModel)\n\nCreate variables for the capital costs for the investments in transmission. Empty function to allow for multiple dispatch in the EnergyModelsInvestment package.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.variables_trans_mode-Tuple{Any, Any, Vector{<:PipeLinepackSimple}, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.variables_trans_mode","text":"variables_trans_mode(m, 𝒯, ℳᴸᴾ::Vector{<:PipeLinepackSimple}, modeltype::EnergyModel)\n\nAdds the following special variables for linepacking:\n\n:linepack_stor_level - storage level in linepack\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.variables_trans_mode-Tuple{Any, Any, Vector{<:TransmissionMode}, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.variables_trans_mode","text":"variables_trans_mode(m, 𝒯, ℳˢᵘᵇ::Vector{<:TransmissionMode}, modeltype::EnergyModel)\n\nDefault fallback method when no function is defined for a TransmissionMode type. It introduces the variables that are required in all TransmissionModes. These variables are:\n\n:trans_in - inlet flow to transmission mode\n:trans_out - outlet flow from a transmission mode\n:trans_loss - loss during transmission\n:trans_loss_neg - negative loss during transmission, helper variable if bidirectional\n\ntransport is possible\n\n:trans_loss_pos - positive loss during transmission, helper variable if bidirectional\n\ntransport is possible\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.variables_trans_modes-Tuple{Any, Any, Any, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.variables_trans_modes","text":"variables_trans_modes(m, 𝒯, ℳ, modeltype::EnergyModel)\n\nLoop through all TransmissionMode types and create variables specific to each type. This is done by calling the method variables_trans_mode on all modes of each type.\n\nThe TransmissionMode type representing the widest category will be called first. That is, variables_trans_mode will be called on a TransmissionMode before it is called on PipeMode-nodes.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/reference/#EnergyModelsGeography.variables_trans_opex-Tuple{Any, Any, Any, EnergyModelsBase.EnergyModel}","page":"Reference","title":"EnergyModelsGeography.variables_trans_opex","text":"variables_trans_opex(m, 𝒯, ℳ, modeltype::EnergyModel)\n\nDeclaration of variables for the operational costs of the tranmission modes.\n\n\n\n\n\n","category":"method"},{"location":"manual/NEWS/#Release-notes","page":"Release notes","title":"Release notes","text":"","category":"section"},{"location":"manual/NEWS/#Unversioned","page":"Release notes","title":"Unversioned","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Use dev version of EMG for examples when running as part of tests, similar to PR #33 of EMB.","category":"page"},{"location":"manual/NEWS/#Version-0.9.0-(2024-05-24)","page":"Release notes","title":"Version 0.9.0 (2024-05-24)","text":"","category":"section"},{"location":"manual/NEWS/#Update-on-function-calls-for-dispatching-on-modeltype","page":"Release notes","title":"Update on function calls for dispatching on modeltype","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Introduced modeltype as argument for all create and constraint functions.\nMoved constraint on installed capacity to function constraints_capacity_installed to replicate the dispatch behaviour from EnergyModelsBase.","category":"page"},{"location":"manual/NEWS/#Version-0.8.5-(2024-05-24)","page":"Release notes","title":"Version 0.8.5 (2024-05-24)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Update of dependencies and adjustment to changes in EnergyModelsBase v0.7.","category":"page"},{"location":"manual/NEWS/#Version-0.8.4-(2024-05-09)","page":"Release notes","title":"Version 0.8.4 (2024-05-09)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Provided a contribution section in the documentation.\nFixed a link in the documentation for the examples.","category":"page"},{"location":"manual/NEWS/#Version-0.8.3-(2024-03-21)","page":"Release notes","title":"Version 0.8.3 (2024-03-21)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Fixed a bug regarding accessing the field limit of a LimitedExchangeArea.\nMoved all files declaring structures to a separate folder for improved readability.\nAllow for jumping over TimeProfile checks also from EnergyModelsGeography.\nAdded possibility to provide a different type of JuMP.Model.","category":"page"},{"location":"manual/NEWS/#Version-0.8.2-(2024-03-04)","page":"Release notes","title":"Version 0.8.2 (2024-03-04)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Fixed a bug when running the examples from a non-cloned version of EnergyModelsGeography.\nThis was achieved through a separate Project.toml in the examples.","category":"page"},{"location":"manual/NEWS/#Version-0.8.1-(2024-01-30)","page":"Release notes","title":"Version 0.8.1 (2024-01-30)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Updated the restrictions on the fields of individual types to be more restrictive.","category":"page"},{"location":"manual/NEWS/#Version-0.8.0-(2023-12-19)","page":"Release notes","title":"Version 0.8.0 (2023-12-19)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Adjusted to changes in EnergyModelsBase v0.6. These changes are mainly:","category":"page"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"All fields of composite types are now lower case.\nAn extensive number of functions to access the individual fields were included, allowing for differing definitions of the individual nodes.\nThe GeoAvailability type does no longer require as input dictionaries for both input and output. Instead, it is now a single array corresponding to all resources.\nNew function getnodesinarea to extract nodes connected to the Availability node of an area.\nChanged file structure for simplified understanding of the different types.","category":"page"},{"location":"manual/NEWS/#Version-0.7.1-(2023-06-16)","page":"Release notes","title":"Version 0.7.1 (2023-06-16)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Updated the documentation based on the new format.","category":"page"},{"location":"manual/NEWS/#Version-0.7.0-(2023-06-06)","page":"Release notes","title":"Version 0.7.0 (2023-06-06)","text":"","category":"section"},{"location":"manual/NEWS/#Switch-to-TimeStruct","page":"Release notes","title":"Switch to TimeStruct","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Switched the time structure representation to TimeStruct.\nTimeStruct is implemented with only the basis features that were available in TimeStructures. This implies that neither operational nor strategic uncertainty is included in the model.","category":"page"},{"location":"manual/NEWS/#Version-0.6.1-(2023-06-02)","page":"Release notes","title":"Version 0.6.1 (2023-06-02)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Bugfix in linepacking to include multiplication with duration(t) for proper energy accounting","category":"page"},{"location":"manual/NEWS/#Version-0.6.0-(2023-05-30)","page":"Release notes","title":"Version 0.6.0 (2023-05-30)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Changed the structure in which the extra field Data is included in the nodes.\nIt is changed from Dict{String, Data} to Array{data}.","category":"page"},{"location":"manual/NEWS/#Version-0.5.2-(2023-05-16)","page":"Release notes","title":"Version 0.5.2 (2023-05-16)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Bugfix in the example which lead to a trivial solution in which no energy has to be converted.","category":"page"},{"location":"manual/NEWS/#Version-0.5.1-(2023-04-30)","page":"Release notes","title":"Version 0.5.1 (2023-04-30)","text":"","category":"section"},{"location":"manual/NEWS/#Multiple-smaller-updates","page":"Release notes","title":"Multiple smaller updates","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Moved the example in user_interface.jl into an example folder.\nIntroduced checks that can be utlized to check transmission related data.\nFixed a bug for LimitedExchangeArea that utilized wrong values.","category":"page"},{"location":"manual/NEWS/#Version-0.5.0-(2023-04-27)","page":"Release notes","title":"Version 0.5.0 (2023-04-27)","text":"","category":"section"},{"location":"manual/NEWS/#Added-var-and-fixed-opex-for-transmision-modes","page":"Release notes","title":"Added var and fixed opex for transmision modes","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"All TransmissionMode are updated to have fields for var and fixed opex.\nVariables trans_opex_var and trans_opex_fixed, also constraints that describes these variables.\nThe function update_objective is updated in src\\model.jl to add var and fixed opex to the objective function.","category":"page"},{"location":"manual/NEWS/#Additional-changes","page":"Release notes","title":"Additional changes","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Constraints formulations are seperated into functions and moved to src\\constraint_functions.jl, similar to how is is organized in EnergyModelsBase commit [26ad8740].\nCompute functions are moved to seperate file src\\compute_functions.jl.","category":"page"},{"location":"manual/NEWS/#Version-0.4.0-(2023-03-17)","page":"Release notes","title":"Version 0.4.0 (2023-03-17)","text":"","category":"section"},{"location":"manual/NEWS/#Change-of-indexing","page":"Release notes","title":"Change of indexing","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Variables are now indexed via the TransmissionMode and the time period instead of the using a SparseAxisArray and indexing via Transmission, time period, and TransmissionMode. This also improves model generation time.\nThis adjustment requires the declaration of a new instance for each usage of a TransmissionMode, see, e.g., the changes in scr\\user_interface.jl.","category":"page"},{"location":"manual/NEWS/#Additional-changes-2","page":"Release notes","title":"Additional changes","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Change of variable generation for individual transmission modes: Variable generation via the function variables_trans_mode(s) is adjusted to follow the concept introduced in EnergyModelsBase.\nMove of the field Data from Transmission to TransmissionMode. This is required for the later application of dispatching in EnergyModelsInvestments.","category":"page"},{"location":"manual/NEWS/#Version-0.3.1-(2023-02-16)","page":"Release notes","title":"Version 0.3.1 (2023-02-16)","text":"","category":"section"},{"location":"manual/NEWS/#Introduction-of-linepacking","page":"Release notes","title":"Introduction of linepacking","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Redefinition of PipelineMode as abstract type PipeMode and introduction of PipeSimple as a composite type corresponding to the previous PipelineMode.\nIntroduction of a simple linepacking implementation via the type `PipeLinepackSimple.\nChange of Area to abstract type to be able to dispatch on areas.\nRewriting how functions for variable generation are called for easier introduction of variables for different TransmissionModes.","category":"page"},{"location":"manual/NEWS/#Version-0.3.0-(2023-02-02)","page":"Release notes","title":"Version 0.3.0 (2023-02-02)","text":"","category":"section"},{"location":"manual/NEWS/#Adjustmends-to-updates-in-EnergyModelsBase","page":"Release notes","title":"Adjustmends to updates in EnergyModelsBase","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Adjustment to version 0.3.0, namely:","category":"page"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"The removal of emissions from Node type definition that do not require them in all tests.\nRemoval of the type GlobalData and replacement with fields in the type OperationalModel in all tests.","category":"page"},{"location":"manual/NEWS/#Version-0.2.2-(2022-12-12)","page":"Release notes","title":"Version 0.2.2 (2022-12-12)","text":"","category":"section"},{"location":"manual/NEWS/#Internal-release","page":"Release notes","title":"Internal release","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Updated Readme.\nRenamed with common prefix.","category":"page"},{"location":"manual/NEWS/#Version-0.2.1-(2021-09-07)","page":"Release notes","title":"Version 0.2.1 (2021-09-07)","text":"","category":"section"},{"location":"manual/NEWS/#Changes-in-naming","page":"Release notes","title":"Changes in naming","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Major changes in both variable and parameter naming, check the commit message for an overview.\nIntroduction of bidrectional flow in transmission lines.","category":"page"},{"location":"manual/NEWS/#Version-0.2.0-(2021-08-02)","page":"Release notes","title":"Version 0.2.0 (2021-08-02)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Defined structures for Areas, Transmission corridors and TransmissionModes.\nOverloading of the default availability node balance to allow for export and import.\nAdded examples of plotting in maps.","category":"page"},{"location":"manual/NEWS/#Version-0.1.0-(2021-04-19)","page":"Release notes","title":"Version 0.1.0 (2021-04-19)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Initial (skeleton) version.","category":"page"},{"location":"#EnergyModelsGeography","page":"Home","title":"EnergyModelsGeography","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"EnergyModelsGeography","category":"page"},{"location":"#EnergyModelsGeography","page":"Home","title":"EnergyModelsGeography","text":"Main module for EnergyModelsGeography.jl.\n\nExports:\n\nArea, RefArea, GeoAvailability, Transmission, RefStatic, RefDynamic, PipeMode, PipeSimple, PipeLinepackSimple.\n\n\n\n\n\n","category":"module"},{"location":"","page":"Home","title":"Home","text":"The Julia package extends EnergyModelsBase with functionality to set up an energy system consisting of several separate regions, with transmissions between.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The extension focuses on overriding the function EMB.create_model to add additional types, variables, and constraints to the model.","category":"page"},{"location":"#Manual-outline","page":"Home","title":"Manual outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"manual/quick-start.md\",\n    \"manual/philosophy.md\",\n    \"manual/optimization-variables.md\",\n    \"manual/constraint-functions.md\",\n    \"manual/transmission-mode.md\",\n    \"manual/simple-example.md\"\n]\nDepth = 1","category":"page"},{"location":"#How-to-guides","page":"Home","title":"How to guides","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"how-to/contribute.md\",\n]\nDepth = 1","category":"page"},{"location":"#Library-outline","page":"Home","title":"Library outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"library/public.md\",\n    \"library/internals/reference.md\",\n    ]\nDepth = 1","category":"page"},{"location":"library/public/#sec_lib_public","page":"Public","title":"Public interface","text":"","category":"section"},{"location":"library/public/#Area","page":"Public","title":"Area","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"A geographical Area consist of a location and a connection to a local energy system via a specialized Availability node called GeoAvailability. The specialized Availability node is required to modify the energy/mass balance to allow for imports and exports. Constraints related to the area keep track of a resource's export and import to the local system and exchange with other areas. Multiple dispatch is used on the Area type for imposing specific constraints. Hence, other restrictions can be applied on a area level, such as electricity generation reserves, CO₂ emission limits or resource limits (wind power, natural gas etc.).","category":"page"},{"location":"library/public/#Area-types","page":"Public","title":"Area types","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"The following types are inmplemented:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"Area\nRefArea\nLimitedExchangeArea\nGeoAvailability","category":"page"},{"location":"library/public/#EnergyModelsGeography.Area","page":"Public","title":"EnergyModelsGeography.Area","text":"Declaration of the general type for areas.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#EnergyModelsGeography.RefArea","page":"Public","title":"EnergyModelsGeography.RefArea","text":"RefArea <: Area\n\nA RefArea is an area representation with no additional constraints on energy/mass exchange.\n\nFields\n\nid is the name/identifier of the area.\nname is the name of the area.\nlon::Real is the longitudinal position of the area.\nlat::Real is the latitudinal position of the area.\nnode::Availability is the Availability node routing different resources within an area.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#EnergyModelsGeography.LimitedExchangeArea","page":"Public","title":"EnergyModelsGeography.LimitedExchangeArea","text":"LimitedExchangeArea <: Area\n\nA LimitedExchangeArea is an area in which the export is limited in each individual operational period for the provided resources. This can be necessary when an area is coupled with multiple other areas and the total export capacity should be restricted.\n\nFields\n\nid is the name/identifier of the area.\nname is the name of the area.\nlon::Real is the longitudinal position of the area.\nlat::Real is the latitudinal position of the area.\nnode::Availability is the Availability node routing different resources within an area.\nlimit::Dict{<:EMB.Resource, <:TimeProfile} is the amount of a resource that can be exchanged with other areas\n\n\n\n\n\n","category":"type"},{"location":"library/public/#EnergyModelsGeography.GeoAvailability","page":"Public","title":"EnergyModelsGeography.GeoAvailability","text":"GeoAvailability <: EMB.Availability\n\nA geography Availability node for substituion of the general Availability node. A GeoAvailability is required if transmission should be included between individual Areas due to a changed mass balance.\n\nFields\n\nid is the name/identifier of the node.\ninput::Array{<:Resource} are the input Resources with conversion value Real. The latter are not relevant but included for consistency with other formulations.\noutput::Array{<:Resource} are the generated Resources with conversion value Real. The latter are not relevant but included for consistency with other formulations.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#Functions-for-accessing-fields-of-Area-types","page":"Public","title":"Functions for accessing fields of Area types","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"The following functions are defined for accessing fields from an Area:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"name\navailability_node\nlimit_resources\nexchange_limit\nexchange_resources\ngetnodesinarea","category":"page"},{"location":"library/public/#EnergyModelsGeography.name","page":"Public","title":"EnergyModelsGeography.name","text":"name(a::Area)\n\nReturns the name of area a.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#EnergyModelsGeography.availability_node","page":"Public","title":"EnergyModelsGeography.availability_node","text":"availability_node(a::Area)\n\nReturns the availability node of an Area a.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#EnergyModelsGeography.limit_resources","page":"Public","title":"EnergyModelsGeography.limit_resources","text":"limit_resources(a::LimitedExchangeArea)\n\nReturns the limited resources of a LimitedExchangeArea a. All other resources are considered unlimited.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#EnergyModelsGeography.exchange_limit","page":"Public","title":"EnergyModelsGeography.exchange_limit","text":"exchange_limit(a::LimitedExchangeArea)\n\nReturns the limits of the exchange resources in area a.\n\n\n\n\n\nexchange_limit(a::LimitedExchangeArea, p::Resource)\n\nReturns the limit of exchange resource p in area a a TimeProfile.\n\n\n\n\n\nexchange_limit(a::LimitedExchangeArea, p::Resource, t)\n\nReturns the limit of exchange resource p in area a at time period t.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#EnergyModelsGeography.exchange_resources","page":"Public","title":"EnergyModelsGeography.exchange_resources","text":"exchange_resources(ℒ, a::Area)\n\nReturn the resources exchanged (import and export) from area a on the transmission corridors in ℒ.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#EnergyModelsGeography.getnodesinarea","page":"Public","title":"EnergyModelsGeography.getnodesinarea","text":"getnodesinarea(a::Area, links)\n\nReturn a vector with all the nodes connected to the central availability node of an area.\n\nFields\n\na::Area. \nlinks is a vector of all links in the model.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#Transmission","page":"Public","title":"Transmission","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Transmission occurs on specified transmission corridors from one area to another. On each corridor, there can exist several TransmissionModes that are transporting resources using a range of technologies.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"It is important to consider the from and to Area when specifying a Transmission corridor. The chosen direction has an influence on whether the variables texttttrans_inm t and texttttrans_outm t are positive or negative for exports in the case of bidirectional transport. This is also explained on the page Optimization variables.","category":"page"},{"location":"library/public/#Transmission-types","page":"Public","title":"Transmission types","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Transmission","category":"page"},{"location":"library/public/#EnergyModelsGeography.Transmission","page":"Public","title":"EnergyModelsGeography.Transmission","text":"A Transmission corridor.\n\nA geographic corridor where TransmissionModes are used to transport resources.\n\nFields\n\nfrom::Area is the area resources are transported from.\nto::Area is the area resources are transported to.\nmodes::Vector{<:Transmission} are the transmission modes that are available.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#Functions-for-accessing-fields-of-Transmission-types","page":"Public","title":"Functions for accessing fields of Transmission types","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"The following functions are defined for accessing fields from a Transmission as well as finding a subset of Transmission corridors:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"modes\nmodes_sub\ncorr_from\ncorr_to\ncorr_from_to\nmodes_of_dir","category":"page"},{"location":"library/public/#EnergyModelsGeography.modes","page":"Public","title":"EnergyModelsGeography.modes","text":"modes(l::Transmission)\n\nReturn an array of the transmission modes for a transmission corridor l.\n\n\n\n\n\nmodes(ℒ::Vector{::Transmission})\n\nReturn an array of all transmission modes present in the different transmission corridors.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#EnergyModelsGeography.modes_sub","page":"Public","title":"EnergyModelsGeography.modes_sub","text":"modes_sub(ℳ::Vector{<:TransmissionMode}, string::String)\n\nReturns all transmission modes that include in the name the string.\n\n\n\n\n\nmodes_sub(ℳ::Vector{<:TransmissionMode}, string_array::Array{String})\n\nReturns all transmission modes that include in the name all entries of the array string_array.\n\n\n\n\n\nmodes_sub(l::Transmission, mode_type::TransmissionMode)\n\nReturn an array containing all TransmissionModes of type type in Transmission corridor l.\n\n\n\n\n\nmodes_sub(ℒᵗʳᵃⁿˢ::Vector{<:Transmission}, mode_type::TransmissionMode)\n\nReturn an array containing all TransmissionModes of type type in Transmissions ℒ.\n\n\n\n\n\nmodes_sub(l::Transmission, p::Resource)\n\nReturn an array containing all TransmissionModes that transport the resource p in Transmission corridor l.\n\n\n\n\n\nmodes_sub(ℒᵗʳᵃⁿˢ::Vector{<:Transmission}, p::Resource)\n\nReturn an array containing all TransmissionModes that transport the resource p in Transmissions ℒ.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#EnergyModelsGeography.corr_from","page":"Public","title":"EnergyModelsGeography.corr_from","text":"corr_from(from::String, ℒᵗʳᵃⁿˢ)\n\nReturns all transmission corridors that orginate in the Area with the name from.\n\n\n\n\n\ncorr_from(from::Area, ℒᵗʳᵃⁿˢ)\n\nReturns all transmission corridors that orginate in Area from.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#EnergyModelsGeography.corr_to","page":"Public","title":"EnergyModelsGeography.corr_to","text":"corr_to(to::String, ℒᵗʳᵃⁿˢ)\n\nReturns all transmission corridors that end in the Area with the name to.\n\n\n\n\n\ncorr_to(to::Area, ℒᵗʳᵃⁿˢ)\n\nReturns all transmission corridors that end in Area to.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#EnergyModelsGeography.corr_from_to","page":"Public","title":"EnergyModelsGeography.corr_from_to","text":"corr_from_to(from::String, to::String, ℒᵗʳᵃⁿˢ)\n\nReturns the transmission corridor that orginate in the Area with the id from and end in the Area with the id to.\n\n\n\n\n\ncorr_from_to(from::Area, to::Area, ℒᵗʳᵃⁿˢ)\n\nReturns the transmission corridor that orginate in the Area with the id from and end in the Area with the id to.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#EnergyModelsGeography.modes_of_dir","page":"Public","title":"EnergyModelsGeography.modes_of_dir","text":"modes_of_dir(ℒ, dir::Int)\n\nReturn the transmission modes of dir directions for transmission modes ℳ.\n\n\n\n\n\nmodes_of_dir(l, dir::Int)\n\nReturn the transmission modes of dir directions for transmission corridor l`.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#TransmissionMode","page":"Public","title":"TransmissionMode","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"TransmissionMode describes how resources are transported, for example by dynamic transmission modes on ship, truck or railway (represented generically by RefDynamic, although not implemented in the current version) or by static transmission modes on overhead power lines or gas pipelines (respresented generically by RefStatic). TransmissionModes includes capacity limits (trans_cap), losses (trans_loss) and directions (directions) for the generic transmission modes RefDynamic and RefStatic. More specialized TransmissionModes such as subtypes of the abstract type PipeMode can convert one inlet resource to another outlet resource. This approach can be used for representing a static pressure drop within a pipeline. The PipeMode can be consuming another resource such as electricity for compressors at a consumption_rate in order to transport natural gas or hydrogen. The consumption_rate is in this situation proportional to the transport of the inlet resource. All TransmissionModes can also include both fixed (opex_fixed) and variable (opex_var) operational expenditures (OPEX).","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"warning: Warning\nAll parameters of the implemented TransmissionModes are relative (based on usage, opex_var and trans_loss, or the installed capacity, opex_fixed). They are independent of the distance. The reasoning for this approach is that it allows the modeller to have a non-linear, distance dependent OPEX or loss function for providing the input to the model.","category":"page"},{"location":"library/public/#TransmissionMode-types","page":"Public","title":"TransmissionMode types","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"The following TransmissionModes are implemented and exported:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"TransmissionMode\nRefStatic\nRefDynamic\nPipeMode\nPipeSimple\nPipeLinepackSimple","category":"page"},{"location":"library/public/#EnergyModelsGeography.TransmissionMode","page":"Public","title":"EnergyModelsGeography.TransmissionMode","text":"Declaration of the general type for transmission mode transporting resources between areas.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#EnergyModelsGeography.RefStatic","page":"Public","title":"EnergyModelsGeography.RefStatic","text":"A reference static TransmissionMode.\n\nGeneric representation of static transmission modes, such as overhead power lines or pipelines.\n\nFields\n\nid::String is the name/identifyer of the transmission mode.\nresource::Resource is the resource that is transported.\ntrans_cap::Real is the capacity of the transmission mode.\ntrans_loss::Real is the loss of the transported resource during transmission, modelled as a ratio.\nopex_var::TimeProfile is the variable operating expense per energy unit transported.\nopex_fixed::TimeProfile is the fixed operating expense per installed capacity.\ndirections is the number of directions the resource can be transported, 1 is unidirectional (A->B) or 2 is bidirectional (A<->B).\ndata::Vector{Data} is the additional data (e.g. for investments). The field data is conditional through usage of a constructor.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#EnergyModelsGeography.RefDynamic","page":"Public","title":"EnergyModelsGeography.RefDynamic","text":"A reference dynamic TransmissionMode.\n\nGeneric representation of dynamic transmission modes, using for example truck, ship or railway transport.\n\nFields\n\nid::String is the name/identifyer of the transmission mode.\nresource::Resource is the resource that is transported.\ntrans_cap::TimeProfile is the capacity of the transmission mode.\ntrans_loss::TimeProfile is the loss of the transported resource during transmission, modelled as a ratio.\nopex_var::TimeProfile is the variable operating expense per energy unit transported.\nopex_fixed::TimeProfile is the fixed operating expense per installed capacity.\ndirections is the number of directions the resource can be transported, 1 is unidirectional (A->B) or 2 is bidirectional (A<->B).\ndata::Vector{Data} is the additional data (e.g. for investments). The field data is conditional through usage of a constructor.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#EnergyModelsGeography.PipeMode","page":"Public","title":"EnergyModelsGeography.PipeMode","text":"TransmissionMode mode for additional variable potential.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#EnergyModelsGeography.PipeSimple","page":"Public","title":"EnergyModelsGeography.PipeSimple","text":"This TransmissionMode allows for altering the transported Resource.\n\nA usage of this could e.g. be by defining a subtype struct of Resource with the field 'pressure'. This PipelineMode can then take SomeSubtype<:Resource with pressure p₁ at the inlet, and pressure p₂ at the outlet.\n\nThis type also supports consuming resources proportionally to the volume of transported Resource (at the inlet). This could be used for modeling the power needed for operating the pipeline.\n\nFields\n\nid::String is the identifier used in printed output.\ninlet::Resource is the Resource going into transmission.\noutlet::Resource is the Resource going out of the outlet of the transmission.\nconsuming::Resource is the Resource the transmission consumes by operating.\nconsumption_rate::Real the rate of which the resource Pipeline.consuming is consumed, as a ratio of the volume of the resource going into the inlet. I.e.:\n  `consumption_rate` = consumed volume / inlet volume (per operational period)\ntrans_cap::Real is the capacity of the transmission mode.\ntrans_loss::Real is the loss of the transported resource during transmission, modelled as a ratio.\nopex_var::TimeProfile is the variable operating expense per energy unit transported.\nopex_fixed::TimeProfile is the fixed operating expense per installed capacity.\ndirections specifies that the pipeline is Unidirectional (1) by default.\ndata::Vector{Data} is the additional data (e.g. for investments).\n\n\n\n\n\n","category":"type"},{"location":"library/public/#EnergyModelsGeography.PipeLinepackSimple","page":"Public","title":"EnergyModelsGeography.PipeLinepackSimple","text":"PipeLinepackSimple <: TransmissionMode\n\nPipeline model with linepacking implemented as simple storage function.\n\nFields (additional to PipeSimple)\n\nenergy_share::Float64  - is the storage energy capacity relative to pipeline capacity.\nLevel_share_init::Float64  - is the initial storage level. \ndata::Vector{Data} is the additional data (e.g. for investments).\n\n\n\n\n\n","category":"type"},{"location":"library/public/#Functions-for-accessing-fields-of-TransmissionMode-types","page":"Public","title":"Functions for accessing fields of TransmissionMode types","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"The following functions are defined and exported for accessing fields from a TransmissionMode:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"map_trans_resource\nloss\ndirections\nconsumption_rate\nenergy_share","category":"page"},{"location":"library/public/#EnergyModelsGeography.map_trans_resource","page":"Public","title":"EnergyModelsGeography.map_trans_resource","text":"map_trans_resource(tm)\n\nReturns the transported resource for a given TransmissionMode.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#EnergyModelsGeography.loss","page":"Public","title":"EnergyModelsGeography.loss","text":"loss(tm::TransmissionMode)\n\nReturns the loss of transmission mode tm as TimeProfile.\n\n\n\n\n\nloss(tm::TransmissionMode, t)\n\nReturns the loss of transmission mode tm at time period t.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#EnergyModelsGeography.directions","page":"Public","title":"EnergyModelsGeography.directions","text":"directions(tm::TransmissionMode)\n\nReturns the directions of transmission mode tm.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#EnergyModelsGeography.consumption_rate","page":"Public","title":"EnergyModelsGeography.consumption_rate","text":"consumption_rate(tm::PipeMode)\n\nReturns the consumption rate of pipe mode tm as TimeProfile.\n\n\n\n\n\nconsumption_rate(tm::PipeMode, t)\n\nReturns the consumption rate of pipe mode tm at time period t.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#EnergyModelsGeography.energy_share","page":"Public","title":"EnergyModelsGeography.energy_share","text":"energy_share(tm::PipeLinepackSimple)\n\nReturns the energy share of PipeLinepackSimple tm.\n\n\n\n\n\n","category":"function"}]
}
